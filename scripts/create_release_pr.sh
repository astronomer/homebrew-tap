#!/bin/bash

set -euo pipefail

# Variables
ASTRO_CLI_REPO="astronomer/astro-cli"
HOMEBREW_TAP_REPO="astronomer/homebrew-tap"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(dirname "$SCRIPT_DIR")"
FORMULA_TEMPLATE=".astro.rb.template"
FORMULA_OUTPUT="Formula/astro.rb"
GITHUB_USER="<your-github-username>" # Replace with your GitHub username

# Fetch the latest release version
LATEST_RELEASE=$(curl -s "https://api.github.com/repos/$ASTRO_CLI_REPO/releases/latest" | jq -r '.tag_name')
LATEST_RELEASE="${LATEST_RELEASE#v}" # Strip "v" prefix if present

if [[ -z "$LATEST_RELEASE" ]]; then
    echo "Failed to fetch the latest release version from $ASTRO_CLI_REPO."
    exit 1
fi

echo "Latest release: $LATEST_RELEASE"

export VERSIONED_FORMULA_OUTPUT="Formula/astro@${LATEST_RELEASE}.rb"

# Fetch SHA256 checksums for all target platforms
DARWIN_ARM_SHA=$(curl -sL "https://github.com/$ASTRO_CLI_REPO/releases/download/v${LATEST_RELEASE}/astro_${LATEST_RELEASE}_darwin_arm64.tar.gz" | shasum -a 256 | awk '{print $1}')
DARWIN_INTEL_SHA=$(curl -sL "https://github.com/$ASTRO_CLI_REPO/releases/download/v${LATEST_RELEASE}/astro_${LATEST_RELEASE}_darwin_amd64.tar.gz" | shasum -a 256 | awk '{print $1}')
LINUX_ARM_SHA=$(curl -sL "https://github.com/$ASTRO_CLI_REPO/releases/download/v${LATEST_RELEASE}/astro_${LATEST_RELEASE}_linux_arm64.tar.gz" | shasum -a 256 | awk '{print $1}')
LINUX_AMD_SHA=$(curl -sL "https://github.com/$ASTRO_CLI_REPO/releases/download/v${LATEST_RELEASE}/astro_${LATEST_RELEASE}_linux_amd64.tar.gz" | shasum -a 256 | awk '{print $1}')


echo "SHA256 Checksums:"
echo "  Darwin ARM64:  $DARWIN_ARM_SHA"
echo "  Darwin AMD64:  $DARWIN_INTEL_SHA"
echo "  Linux ARM64:   $LINUX_ARM_SHA"
echo "  Linux AMD64:   $LINUX_AMD_SHA"

# Create a new branch
BRANCH_NAME="release-$LATEST_RELEASE"
echo "Creating a new branch: $BRANCH_NAME"
git checkout -b "$BRANCH_NAME"

# Clone the Homebrew Tap repository
cd "$REPO_ROOT"

export VERSION=Astro
# Create the formula file using envsubst
echo "Creating the formula file..."
cat > "$FORMULA_TEMPLATE" <<EOL
# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class ${VERSION} < Formula
  desc "To build and run Airflow DAGs locally via docker-compose and deploy DAGs to Astronomer-managed Airflow clusters and interact with the Astronomer API."
  homepage "https://astronomer.io"
  version "\${LATEST_RELEASE}"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/astronomer/astro-cli/releases/download/v\${LATEST_RELEASE}/astro_\${LATEST_RELEASE}_darwin_arm64.tar.gz"
      sha256 "\${DARWIN_ARM_SHA}"
    end
    if Hardware::CPU.intel?
      url "https://github.com/astronomer/astro-cli/releases/download/v\${LATEST_RELEASE}/astro_\${LATEST_RELEASE}_darwin_amd64.tar.gz"
      sha256 "\${DARWIN_INTEL_SHA}"
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/astronomer/astro-cli/releases/download/v\${LATEST_RELEASE}/astro_\${LATEST_RELEASE}_linux_arm64.tar.gz"
      sha256 "\${LINUX_ARM_SHA}"
    end
    if Hardware::CPU.intel?
      url "https://github.com/astronomer/astro-cli/releases/download/v\${LATEST_RELEASE}/astro_\${LATEST_RELEASE}_linux_amd64.tar.gz"
      sha256 "\${LINUX_AMD_SHA}"
    end
  end

  def install
    bin.install "astro"
  end

  test do
    system "\#{bin}/astro version"
  end
end
EOL

echo $FORMULA_TEMPLATE

export LATEST_RELEASE
export DARWIN_ARM_SHA
export DARWIN_INTEL_SHA
export LINUX_ARM_SHA
export LINUX_AMD_SHA

envsubst < "$FORMULA_TEMPLATE"  > "$FORMULA_OUTPUT"

echo "Creating the formula file... $VERSIONED_FORMULA_OUTPUT"
touch $VERSIONED_FORMULA_OUTPUT
export VERSION="AstroAT${LATEST_RELEASE//./}"
envsubst < "$FORMULA_TEMPLATE"  > "$VERSIONED_FORMULA_OUTPUT"

echo "Committing the changes..."
git add "$FORMULA_OUTPUT" "$VERSIONED_FORMULA_OUTPUT"
git commit -m "Update astro formula to $LATEST_RELEASE"

# Push the branch
echo "Pushing the branch to origin..."
git push -u origin "$BRANCH_NAME"

# Create a pull request using GitHub CLI
echo "Creating a pull request..."
gh pr create \
    --repo "$HOMEBREW_TAP_REPO" \
    --head "$BRANCH_NAME" \
    --base main \
    --title "Update astro formula to $LATEST_RELEASE" \
    --body "This PR updates the astro formula to version $LATEST_RELEASE."

echo "Done! Please review and merge the pull request."



